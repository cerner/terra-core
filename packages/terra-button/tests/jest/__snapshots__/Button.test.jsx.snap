// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ThemeContextProvider
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <Button
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    text="neutral"
    type="button"
    variant="neutral"
  >
    <button
      aria-disabled={false}
      aria-label="neutral"
      className="button neutral orion-fusion-theme"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      title="neutral"
      type="button"
    >
      <span
        className="button-label text-only"
      >
        <span>
          neutral
        </span>
      </span>
    </button>
  </Button>
</ThemeContextProvider>
`;

exports[`should pass in refCallback as the ref prop of the input element 1`] = `
<Button
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  refCallback={
    [MockFunction] {
      "calls": Array [
        Array [
          <button
            aria-disabled="false"
            aria-label="text"
            class="button neutral"
            title="text"
            type="button"
          >
            <span
              class="button-label text-only"
            >
              <span>
                text
              </span>
            </span>
          </button>,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  text="text"
  type="button"
  variant="neutral"
>
  <button
    aria-disabled={false}
    aria-label="text"
    className="button neutral"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    title="text"
    type="button"
  >
    <span
      className="button-label text-only"
    >
      <span>
        text
      </span>
    </span>
  </button>
</Button>
`;

exports[`should render a Button with merged attributes 1`] = `
<button
  aria-disabled={false}
  aria-label="text"
  className="button neutral TestClass"
  data-mock="data"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  style={
    Object {
      "height": "100px",
    }
  }
  title="text"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      text
    </span>
  </span>
</button>
`;

exports[`should render a button with a title 1`] = `
<button
  aria-disabled={false}
  aria-label="Button"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Custom Title"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Button
    </span>
  </span>
</button>
`;

exports[`should render a button with accessible label 1`] = `
<button
  aria-disabled={false}
  aria-label="Custom Accessible Label"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Button"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Button
    </span>
  </span>
</button>
`;

exports[`should render a button with type equal to button 1`] = `
<button
  aria-disabled={false}
  aria-label="button"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="button"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      button
    </span>
  </span>
</button>
`;

exports[`should render a button with type equal to reset 1`] = `
<button
  aria-disabled={false}
  aria-label="reset"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="reset"
  type="reset"
>
  <span
    className="button-label text-only"
  >
    <span>
      reset
    </span>
  </span>
</button>
`;

exports[`should render a button with type equal to submit 1`] = `
<button
  aria-disabled={false}
  aria-label="submit"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="submit"
  type="submit"
>
  <span
    className="button-label text-only"
  >
    <span>
      submit
    </span>
  </span>
</button>
`;

exports[`should render a de-emphasis button 1`] = `
<button
  aria-disabled={false}
  aria-label="de-emphasis"
  className="button de-emphasis"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="de-emphasis"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      de-emphasis
    </span>
  </span>
</button>
`;

exports[`should render a emphasis button 1`] = `
<button
  aria-disabled={false}
  aria-label="emphasis"
  className="button emphasis"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="emphasis"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      emphasis
    </span>
  </span>
</button>
`;

exports[`should render a ghost button 1`] = `
<button
  aria-disabled={false}
  aria-label="ghost"
  className="button ghost"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="ghost"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      ghost
    </span>
  </span>
</button>
`;

exports[`should render a neutral button 1`] = `
<button
  aria-disabled={false}
  aria-label="neutral"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="neutral"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      neutral
    </span>
  </span>
</button>
`;

exports[`should render a utility button 1`] = `
<button
  aria-disabled={false}
  aria-label="utility"
  className="button utility"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="utility"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      utility
    </span>
  </span>
</button>
`;

exports[`should render a utility button with a custom accessible label 1`] = `
<button
  aria-disabled={false}
  aria-label="Custom Accessible Label"
  className="button utility"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Icon Only"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Icon Only
    </span>
  </span>
</button>
`;

exports[`should render a utility button with a custom title 1`] = `
<button
  aria-disabled={false}
  aria-label="Icon Only"
  className="button utility"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Custom Title"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Icon Only
    </span>
  </span>
</button>
`;

exports[`should render a utility button with text as a fallback accessible label 1`] = `
<button
  aria-disabled={false}
  aria-label="Icon Only"
  className="button utility"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Icon Only"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Icon Only
    </span>
  </span>
</button>
`;

exports[`should render a utility button with text as a fallback title 1`] = `
<button
  aria-disabled={false}
  aria-label="Icon Only"
  className="button utility"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="Icon Only"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Icon Only
    </span>
  </span>
</button>
`;

exports[`should render an action button 1`] = `
<button
  aria-disabled={false}
  aria-label="action"
  className="button action"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  title="action"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      action
    </span>
  </span>
</button>
`;

exports[`should render as disabled when set 1`] = `
<button
  aria-disabled={true}
  aria-label="Disabled"
  className="button neutral is-disabled"
  disabled={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  tabIndex="-1"
  title="Disabled"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Disabled
    </span>
  </span>
</button>
`;

exports[`should render with tabIndex when set 1`] = `
<button
  aria-disabled={false}
  aria-label="Tab Index"
  className="button neutral"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  tabIndex="-1"
  title="Tab Index"
  type="button"
>
  <span
    className="button-label text-only"
  >
    <span>
      Tab Index
    </span>
  </span>
</button>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ThemeContextProvider
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <injectIntl(RadioField)
    legend="Default RadioField"
  >
    <RadioField
      error={null}
      help={null}
      hideRequired={false}
      intl={
        Object {
          "$t": [Function],
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "defaultRichTextElements": undefined,
          "fallbackOnEmptyString": true,
          "formatDate": [Function],
          "formatDateTimeRange": [Function],
          "formatDateToParts": [Function],
          "formatDisplayName": [Function],
          "formatList": [Function],
          "formatListToParts": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getDisplayNames": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "onError": [Function],
          "onWarn": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
          "wrapRichTextChunksInFragment": undefined,
        }
      }
      isInline={false}
      isInvalid={false}
      isLegendHidden={false}
      legend="Default RadioField"
      legendAttrs={Object {}}
      required={false}
      showOptional={false}
    >
      <fieldset
        className="radio-field orion-fusion-theme"
        required={false}
      >
        <legend
          className="legend-group"
          id="terra-radio-field-description-1"
        >
          <div
            className="legend"
          >
            Default RadioField
            <span
              className="error-icon-hidden"
            />
          </div>
        </legend>
      </fieldset>
    </RadioField>
  </injectIntl(RadioField)>
</ThemeContextProvider>
`;

exports[`should display the required icon for fields with hideRequired, but have a state of invalid 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should hide the legend when requested 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should hide the required indicator when requested 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render a default radio field 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render a default radio field if it has an undefined child 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render a help message 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render an invalid radio field 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render an optional part on the label 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render required radio field 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`should render the legend with custom attributes properly 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

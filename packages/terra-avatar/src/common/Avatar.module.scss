@import '~terra-mixins/lib/Mixins';

:local {
  .avatar {
    align-items: center;
    // padding-box stops background color from bleeding through border on IE.
    // border-box will fix safari + flexbox clip issue if no border is present.
    background-clip: var(--terra-avatar-background-clip, padding-box);
    border: var(--terra-avatar-border, solid 1px #fff);
    border-radius: 50%;
    color: var(--terra-avatar-color, #fff);
    display: inline-flex;
    height: var(--terra-avatar-height, 3.286em);
    justify-content: center;
    line-height: 0;
    min-height: 1.143em;
    min-width: 1.143em;
    overflow: hidden;
    position: relative;
    vertical-align: middle; // Fixes gap below image variant
    width: var(--terra-avatar-width, 3.286em);
  }

  // Addresses https://github.com/cerner/terra-core/issues/1845
  // Applies to images. Will be overriden by color variants.
  .avatar::after {
    border-radius: 100%;
    box-shadow: var(--terra-avatar-after-box-shadow, inset 0 1px 3px 0 rgba(17, 22, 25, 0.3));
    content: '';
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }

  .avatar > .icon {
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    display: block;

    /* Disabling so that single quotes can be used in svg string */
    /* stylelint-disable string-quotes */
    &.facility {
      background-image: var(--terra-avatar-icon-facility-background-image, inline-svg("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48' ><path fill='#fff' d='M33,20.2V12H15v8.2H9.8V48h12v-9h4.5v9h12V20.2H33z M17.2,42.8h-3V39h3V42.8z M17.2,33.8h-3V30h3V33.8zM25.5,33.8h-3V30h3V33.8z M29.2,22.5h-3.8v3.8h-3v-3.8h-3.8v-3h3.8v-3.8h3v3.8h3.8V22.5z M33.8,42.8h-3V39h3V42.8z M33.8,33.8h-3V30h3V33.8z'/></svg>"));
      height: 100%;
      width: 100%;
    }

    &.shared-user {
      background-image: var(--terra-avatar-icon-shared-user-background-image, inline-svg("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48' ><path fill='#fff' d='M17.2,6c3.6,0,6.5,2.9,6.5,6.5S20.9,19,17.2,19s-6.5-2.9-6.5-6.5S13.6,6,17.2,6z M30.8,14.2c3.6,0,6.5,2.9,6.5,6.5s-2.9,6.5-6.5,6.5s-6.5-2.9-6.5-6.5S27.2,14.2,30.8,14.2z M42,42v-3.3c0-5.3-4.3-9.7-9.7-9.7h-3.1c-5.3,0-9.7,4.4-9.7,9.7V42H42z M25.1,27.5c-1.8-1.5-3-3.8-3.1-6.2c-1-0.3-2-0.5-3.1-0.5h-3.2c-5.4,0-9.8,4.3-9.8,9.7v3.3h12.3C19.6,30.8,22,28.6,25.1,27.5z'/></svg>"));
      height: 100%;
      width: 100%;
    }

    &.user {
      background-image: var(--terra-avatar-icon-user-background-image, inline-svg("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48' ><path fill='#fff' d='M24,12c4.7,0,8.5,3.8,8.5,8.5S28.7,29,24,29s-8.5-3.8-8.5-8.5S19.3,12,24,12z M38.6,48v-4.3c0-7-5.6-12.6-12.6-12.6h-4.1c-6.9,0-12.5,5.6-12.5,12.6V48H38.6z'/></svg>"));
      height: 100%;
      width: 100%;
    }
    /* stylelint-enable string-quotes */
  }

  .avatar > .image {
    border-radius: 50%;
    height: 100%;
    width: 100%;
  }

  .avatar > .initials {
    font-size: var(--terra-avatar-initials-font-size, 1.429em);
    font-weight: var(--terra-avatar-initials-font-weight);
  }

  .avatar.neutral {
    background-color: var(--terra-avatar-neutral-background-color, #0092e0);

    &::after {
      box-shadow: var(--terra-avatar-neutral-after-box-shadow, inset 0 0 0 2px #0092e0);
    }
  }

  .avatar.one {
    background-color: var(--terra-avatar-one-background-color, #0092e0);

    &::after {
      box-shadow: var(--terra-avatar-one-after-box-shadow, inset 0 0 0 2px #0092e0);
    }
  }

  .avatar.two {
    background-color: var(--terra-avatar-two-background-color, #0065a3);

    &::after {
      box-shadow: var(--terra-avatar-two-after-box-shadow, inset 0 0 0 2px #0065a3);
    }
  }

  .avatar.three {
    background-color: var(--terra-avatar-three-background-color, #5c9a32);

    &::after {
      box-shadow: var(--terra-avatar-three-after-box-shadow, inset 0 0 0 2px #5c9a32);
    }
  }

  .avatar.four {
    background-color: var(--terra-avatar-four-background-color, #406c23);

    &::after {
      box-shadow: var(--terra-avatar-four-after-box-shadow, inset 0 0 0 2px #406c23);
    }
  }

  .avatar.five {
    background-color: var(--terra-avatar-five-background-color, #f76e00);

    &::after {
      box-shadow: var(--terra-avatar-five-after-box-shadow, inset 0 0 0 2px #f76e00);
    }
  }

  .avatar.six {
    background-color: var(--terra-avatar-six-background-color, #e34c02);

    &::after {
      box-shadow: var(--terra-avatar-six-after-box-shadow, inset 0 0 0 2px #e34c02);
    }
  }

  .avatar.seven {
    background-color: var(--terra-avatar-seven-background-color, #b400dc);

    &::after {
      box-shadow: var(--terra-avatar-seven-after-box-shadow, inset 0 0 0 2px #b400dc);
    }
  }

  .avatar.eight {
    background-color: var(--terra-avatar-eight-background-color, #7f00a2);

    &::after {
      box-shadow: var(--terra-avatar-eight-after-box-shadow, inset 0 0 0 2px #7f00a2);
    }
  }

  .avatar.nine {
    background-color: var(--terra-avatar-nine-background-color, #0092e0);

    &::after {
      box-shadow: var(--terra-avatar-nine-after-box-shadow, inset 0 0 0 2px #0092e0);
    }
  }

  .avatar.ten {
    background-color: var(--terra-avatar-ten-background-color, #0065a3);

    &::after {
      box-shadow: var(--terra-avatar-ten-after-box-shadow, inset 0 0 0 2px #0065a3);
    }
  }

  // Stops color variant background-color from bleeding through image, when image does not fallback to icon. Overrides color variant box-shadow.
  .avatar.image:not(.fallback-icon) {
    background-color: transparent;

    &::after {
      box-shadow: var(--terra-avatar-after-box-shadow, inset 0 1px 3px 0 rgba(17, 22, 25, 0.3));
    }
  }


  .avatar.is-deceased {
    background-color: var(--terra-avatar-is-deceased-background-color, #64696c);
  }

  // Stops a non fallback image from always being transparent.
  .avatar.is-deceased.image {
    background-color: var(--terra-avatar-is-deceased-background-color, #64696c);

    > .image {
      opacity: var(--terra-avatar-image-is-deceased-opacity, 0.4);
    }
  }

  // Non image variants should use this box shadow. Image variant shoud use base box shadw.
  .avatar.is-deceased:not(.image) {
    &::after {
      box-shadow: var(--terra-avatar-is-deceased-after-box-shadow, inset 0 0 0 2px #64696c);
    }
  }
}

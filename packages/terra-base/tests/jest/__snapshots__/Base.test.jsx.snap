exports[`test should render the component with customMessages 1`] = `
<I18nProvider
  locale="en-US"
  messages={
    Object {
      "App.test": "App test",
    }
  }>
  <div>
    customMessages
  </div>
</I18nProvider>
`;

exports[`test should render the component with merged attributes 1`] = `
<I18nProvider
  locale="en-US"
  messages={Object {}}>
  <div
    className="TestClass"
    data-mock="data"
    id="TestId">
    String
  </div>
</I18nProvider>
`;

exports[`test should support rendering a string as children 1`] = `
<I18nProvider
  locale="en-US"
  messages={Object {}}>
  <div>
    String
  </div>
</I18nProvider>
`;

exports[`test should support rendering a string as the translationsLoadingPlaceholder prop 1`] = `
<div>
  String
</div>
`;

exports[`test should support rendering a string without translation 1`] = `
<div>
  String
</div>
`;

exports[`test should support rendering an array of elements as a children 1`] = `
<I18nProvider
  locale="en-US"
  messages={Object {}}>
  <div>
    <h1>
      Heading
    </h1>
    <p>
      Element 1
    </p>
    <p>
      Element 2
    </p>
  </div>
</I18nProvider>
`;

exports[`test should support rendering an element as children 1`] = `
<I18nProvider
  locale="en-US"
  messages={Object {}}>
  <div>
    <p>
      Element
    </p>
  </div>
</I18nProvider>
`;

exports[`test should support rendering an element as the translationsLoadingPlaceholder prop 1`] = `
<div>
  <p>
    Element
  </p>
</div>
`;

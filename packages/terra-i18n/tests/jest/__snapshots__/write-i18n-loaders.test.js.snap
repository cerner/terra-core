// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`write i18n loaders for fse fileSystem writes a translation file for a non-terra-supported locale 1`] = `
"const loadCyIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/cy.js'),
  'cy-intl-local');

const intlLoaders = {
  'cy': loadCyIntl
};

module.exports = intlLoaders;"
`;

exports[`write i18n loaders for fse fileSystem writes a translation file for a non-terra-supported locale 2`] = `
"const loadCyTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('cy.js');
    callback.call(scope, i18n);
  }, 'cy-translations');
};

const translationsLoaders = {
  'cy': loadCyTranslations
};

module.exports = translationsLoaders;"
`;

exports[`write i18n loaders for fse fileSystem writes loader files 1`] = `
"const loadEnIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/en.js'),
  'en-intl-local');

const loadEsIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/es.js'),
  'es-intl-local');

const intlLoaders = {
  'en': loadEnIntl,
  'es': loadEsIntl
};

module.exports = intlLoaders;"
`;

exports[`write i18n loaders for fse fileSystem writes loader files 2`] = `
"const loadEnTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('en.js');
    callback.call(scope, i18n);
  }, 'en-translations');
};

const loadEsTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('es.js');
    callback.call(scope, i18n);
  }, 'es-translations');
};

const translationsLoaders = {
  'en': loadEnTranslations,
  'es': loadEsTranslations
};

module.exports = translationsLoaders;"
`;

exports[`write i18n loaders for memoryFS fileSystem writes a translation file for a non-terra-supported locale 1`] = `
"const loadCyIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/cy.js'),
  'cy-intl-local');

const intlLoaders = {
  'cy': loadCyIntl
};

module.exports = intlLoaders;"
`;

exports[`write i18n loaders for memoryFS fileSystem writes a translation file for a non-terra-supported locale 2`] = `
"const loadCyTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('cy.js');
    callback.call(scope, i18n);
  }, 'cy-translations');
};

const translationsLoaders = {
  'cy': loadCyTranslations
};

module.exports = translationsLoaders;"
`;

exports[`write i18n loaders for memoryFS fileSystem writes loader files 1`] = `
"const loadEnIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/en.js'),
  'en-intl-local');

const loadEsIntl = () =>
require.ensure([],
  require => require('intl/locale-data/jsonp/es.js'),
  'es-intl-local');

const intlLoaders = {
  'en': loadEnIntl,
  'es': loadEsIntl
};

module.exports = intlLoaders;"
`;

exports[`write i18n loaders for memoryFS fileSystem writes loader files 2`] = `
"const loadEnTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('en.js');
    callback.call(scope, i18n);
  }, 'en-translations');
};

const loadEsTranslations = (callback, scope) => {
  require.ensure([], (require) => {
    // eslint-disable-next-line
    const i18n = require('es.js');
    callback.call(scope, i18n);
  }, 'es-translations');
};

const translationsLoaders = {
  'en': loadEnTranslations,
  'es': loadEsTranslations
};

module.exports = translationsLoaders;"
`;

@import './variables';
@import './mixins';

:local {
  /* stylelint-disable selector-class-pattern  */
  /* stylelint-disable  property-no-unknown */
  .alertBase {
    align-items: stretch;
    display: flex;
    flex: 1;
    justify-content: space-between;
    overflow: hidden;
    width: 100%;
  }

  .narrow {
    flex-direction: column;
  }

  .wide {
    flex-direction: row;
  }

  .icon {
    flex-shrink: 0;
    font-size: var(--terra-Alert-icon-font-size);
    margin-right: 0.5rem;
  }

  .body {
    align-items: flex-start;
    display: flex;
    flex: 1 1 auto;
    flex-direction: row;
    margin-left: 0.6667rem;
    margin-top: 1rem;
    overflow: hidden;
    padding-top: 0.1rem;
  }

  .bodyNarrow {
    composes: body;
    margin-bottom: 0;
    margin-right: 0.6667rem;
  }

  .bodyStd {
    composes: body;
    margin-bottom: 1rem;
    margin-right: 0;
  }

  .section {
    flex: 1;
    padding-top: 0.2rem;
  }

  .sectionCustom {
    color: var(--terra-Alert-custom-text-color);
    composes: section;
  }

  .title {
    float: left;
    margin-right: 0.5833rem;
  }

  .content {
    p {
      margin-top: 0;
    }

    p:last-child {
      margin-bottom: 0;
    }
  }

  .actions {
    align-items: flex-start;
    display: flex;
    flex-direction: row;
    flex-shrink: 0;
    justify-content: flex-end;
    margin: 0.5833rem 0.5833rem 0.5833rem 0.8333rem;
  }

  .actionsCustom {
    color: var(--terra-Alert-custom-text-color);
    composes: actions;
  }

  .actions > :first-child {
    margin-right: 0.8333rem;
  }

  .actions > :last-child {
    margin-right: 0;
  }

  .alert {
    background-color: var(--terra-Alert-alert-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-alert-shadow-color));
  }

  .error {
    background-color: var(--terra-Alert-error-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-error-shadow-color));
  }

  .warning {
    background-color: var(--terra-Alert-warning-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-warning-shadow-color));
  }

  .gapChecking {
    background-color: var(--terra-Alert-gap-checking-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-gap-checking-shadow-color));
  }

  .advisory {
    background-color: var(--terra-Alert-advisory-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-advisory-shadow-color));
  }

  .info {
    background-color: var(--terra-Alert-info-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-info-shadow-color));
  }

  .success {
    background-color: var(--terra-Alert-success-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-success-shadow-color));
  }

  .outsideRecords {
    background-color: var(--terra-Alert-outside-records-background-color);
    composes: alertBase;
    @include terra-alert-box-shadow(var(--terra-Alert-outside-records-shadow-color));
  }

  .custom {
    background-color: var(--terra-Alert-custom-background-color);
    box-shadow: 2px 0 0 inset;
    color: var(--terra-Alert-custom-shadow-color);
    composes: alertBase;
  }

  .alert .title {
    color: var(--terra-Alert-alert-title-color);
  }

  .error .title {
    color: var(--terra-Alert-error-title-color);
  }

  .gapChecking .icon {
    color: var(--terra-Alert-gap-checking-title-color);
  }
  /* stylelint-enable */
}

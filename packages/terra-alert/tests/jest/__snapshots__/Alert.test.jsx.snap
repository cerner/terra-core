// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert of type advisory with text content should render an Alert component of type advisory 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="advisory"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base advisory narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Advisory.
              </strong>
              This is an advisory alert.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base advisory wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Advisory.
              </strong>
              This is an advisory alert.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type alert with text content should render an Alert component of type alert 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="alert"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base alert narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              This is an alert.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base alert wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              This is an alert.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type custom with custom title and text content should render an Alert component of type custom 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={
      <IconHelp
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    }
    customStatusColor="orange"
    onDismiss={null}
    title="Help!"
    type="custom"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base custom narrow"
          style={
            Object {
              "color": "orange",
            }
          }
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconHelp
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section section-custom"
            >
              <strong
                className="title"
              >
                Help!
              </strong>
              This is a custom alert.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base custom wide"
          style={
            Object {
              "color": "orange",
            }
          }
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconHelp
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section section-custom"
            >
              <strong
                className="title"
              >
                Help!
              </strong>
              This is a custom alert.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type error with text content should render an Alert component of type error 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="error"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base error narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconError
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Error.
              </strong>
              This is an error.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base error wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconError
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Error.
              </strong>
              This is an error.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type info with custom title and HTML content should render an Alert component of type info with custom title and HTML content 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title="Gettysburg Address"
    type="info"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base info narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconInformation
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Gettysburg Address
              </strong>
              <span>
                Four score and seven years ago . . .
              </span>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base info wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconInformation
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Gettysburg Address
              </strong>
              <span>
                Four score and seven years ago . . .
              </span>
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type info with text content should render an Alert component of type info 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="info"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base info narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconInformation
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Information.
              </strong>
              This is an information alert.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base info wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconInformation
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Information.
              </strong>
              This is an information alert.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type success with an action button text content should render an Alert component of type success with an action button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={
      <Button
        isBlock={false}
        isCompact={false}
        isDisabled={false}
        isIconOnly={false}
        isReversed={false}
        onClick={[Function]}
        text="Action"
        type="button"
        variant="emphasis"
      />
    }
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="success"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base success narrow"
          style={Object {}}
        >
          <div
            className="body body-narrow"
          >
            <span
              className="icon"
            >
              <IconSuccess
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Success.
              </strong>
              This is a success alert.
            </div>
          </div>
          <div
            className="actions"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Action"
              type="button"
              variant="emphasis"
            />
            
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base success wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconSuccess
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Success.
              </strong>
              This is a success alert.
            </div>
          </div>
          <div
            className="actions"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Action"
              type="button"
              variant="emphasis"
            />
            
          </div>
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type success with text content should render an Alert component of type success 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="success"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base success narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconSuccess
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Success.
              </strong>
              This is a success alert.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base success wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconSuccess
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Success.
              </strong>
              This is a success alert.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert of type warning with text content should render an Alert component of type warning 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="warning"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base warning narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconWarning
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Warning.
              </strong>
              This is an warning.
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base warning wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconWarning
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Warning.
              </strong>
              This is an warning.
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Alert with no props should render a default component 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="alert"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base alert narrow"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base alert wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              
            </div>
          </div>
          
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Dismissable Alert of type custom with action button, custom title and text content should render an Alert component of type custom with an action button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={
      <Button
        isBlock={false}
        isCompact={false}
        isDisabled={false}
        isIconOnly={false}
        isReversed={false}
        onClick={[Function]}
        text="Action"
        type="button"
        variant="emphasis"
      />
    }
    customIcon={
      <IconHelp
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    }
    customStatusColor="orange"
    onDismiss={[Function]}
    title="Help!"
    type="custom"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base custom narrow"
          style={
            Object {
              "color": "orange",
            }
          }
        >
          <div
            className="body body-narrow"
          >
            <span
              className="icon"
            >
              <IconHelp
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section section-custom"
            >
              <strong
                className="title"
              >
                Help!
              </strong>
              This is a custom alert.
            </div>
          </div>
          <div
            className="actions actions-custom"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Action"
              type="button"
              variant="emphasis"
            />
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Dismiss"
              type="button"
              variant="neutral"
            />
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base custom wide"
          style={
            Object {
              "color": "orange",
            }
          }
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconHelp
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section section-custom"
            >
              <strong
                className="title"
              >
                Help!
              </strong>
              This is a custom alert.
            </div>
          </div>
          <div
            className="actions actions-custom"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Action"
              type="button"
              variant="emphasis"
            />
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Dismiss"
              type="button"
              variant="neutral"
            />
          </div>
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`Dismissible Alert that includes actions section should render an alert component with a dismiss button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.info": "Information.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }
>
  <Alert
    action={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={[Function]}
    title=""
    type="alert"
  >
    <ResponsiveElement
      defaultElement={
        <div
          className="alert-base alert narrow"
          style={Object {}}
        >
          <div
            className="body body-narrow"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              This is a test
            </div>
          </div>
          <div
            className="actions"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Dismiss"
              type="button"
              variant="neutral"
            />
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert-base alert wide"
          style={Object {}}
        >
          <div
            className="body body-std"
          >
            <span
              className="icon"
            >
              <IconAlert
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              />
            </span>
            <div
              className="section"
            >
              <strong
                className="title"
              >
                Alert.
              </strong>
              This is a test
            </div>
          </div>
          <div
            className="actions"
          >
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isIconOnly={false}
              isReversed={false}
              onClick={[Function]}
              text="Dismiss"
              type="button"
              variant="neutral"
            />
          </div>
        </div>
      }
    >
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Button should render a block dropdown type 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={true}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render a compact dropdown type 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={true}
  isDisabled={false}
  label="Primary Option"
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render a default dropdown type 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render a disabled dropdown type 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={true}
  label="Primary Option"
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render a split type with custom attributes 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  other-custom-attribute="purple"
  test-custom-attribute={true}
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render a split type with multiple children 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  onSelect={[Function]}
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
  <Item
    label="2nd Option"
    onSelect={[Function]}
  />
  <Item
    label="3rd Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render an emphasis dropdown type 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  variant="emphasis"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

exports[`Dropdown Button should render an open dropdown 1`] = `
<DropdownButton
  buttonAttrs={Object {}}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  label="Primary Option"
  variant="neutral"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownButton>
`;

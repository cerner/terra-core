// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown List correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <InjectIntl(DropdownList)
    requestClose={[Function]}
  >
    <DropdownList
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      requestClose={[Function]}
    >
      <ul
        className="dropdown-list orion-fusion-theme"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        role="menu"
        style={
          Object {
            "width": undefined,
          }
        }
      >
        <Item
          aria-label="Terra.dropdownButton.expanded1st Option,(1 Terra.dropdownButton.of 3)"
          data-terra-dropdown-list-item={true}
          isActive={false}
          key=".0"
          label="1st Option"
          onSelect={[Function]}
          requestClose={[Function]}
        >
          <li
            aria-label="Terra.dropdownButton.expanded1st Option,(1 Terra.dropdownButton.of 3)"
            className="item orion-fusion-theme"
            data-terra-dropdown-list-item={true}
            onClick={[Function]}
            role="menuitem"
            tabIndex="0"
          >
            1st Option
          </li>
        </Item>
        <Item
          aria-label="2nd Option,(2 Terra.dropdownButton.of 3)"
          data-terra-dropdown-list-item={true}
          isActive={false}
          key=".1"
          label="2nd Option"
          onSelect={[Function]}
          requestClose={[Function]}
        >
          <li
            aria-label="2nd Option,(2 Terra.dropdownButton.of 3)"
            className="item orion-fusion-theme"
            data-terra-dropdown-list-item={true}
            onClick={[Function]}
            role="menuitem"
            tabIndex="0"
          >
            2nd Option
          </li>
        </Item>
        <Item
          aria-label="3rd Option,(3 Terra.dropdownButton.of 3)"
          data-terra-dropdown-list-item={true}
          isActive={false}
          key=".2"
          label="3rd Option"
          onSelect={[Function]}
          requestClose={[Function]}
        >
          <li
            aria-label="3rd Option,(3 Terra.dropdownButton.of 3)"
            className="item orion-fusion-theme"
            data-terra-dropdown-list-item={true}
            onClick={[Function]}
            role="menuitem"
            tabIndex="0"
          >
            3rd Option
          </li>
        </Item>
      </ul>
    </DropdownList>
  </InjectIntl(DropdownList)>
</ThemeContextProvider>
`;

exports[`Dropdown List renders a default dropdown list 1`] = `
<ul
  className="dropdown-list"
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  role="menu"
  style={
    Object {
      "width": undefined,
    }
  }
>
  <Item
    aria-label={null}
    data-terra-dropdown-list-item={true}
    isActive={false}
    key=".0"
    label="1st Option"
    onSelect={[Function]}
    requestClose={[Function]}
  />
</ul>
`;

exports[`Dropdown List renders a dropdown list a non-default focused option 1`] = `
<DropdownList
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  requestClose={[Function]}
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
  <Item
    label="2nd Option"
    onSelect={[Function]}
  />
  <Item
    label="3rd Option"
    onSelect={[Function]}
  />
</DropdownList>
`;

exports[`Dropdown List renders a dropdown list an active and focused option 1`] = `
<DropdownList
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  requestClose={[Function]}
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
  <Item
    label="2nd Option"
    onSelect={[Function]}
  />
  <Item
    label="3rd Option"
    onSelect={[Function]}
  />
</DropdownList>
`;

exports[`Dropdown List renders a dropdown list an active option 1`] = `
<DropdownList
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  requestClose={[Function]}
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
  <Item
    label="2nd Option"
    onSelect={[Function]}
  />
  <Item
    label="3rd Option"
    onSelect={[Function]}
  />
</DropdownList>
`;

exports[`Dropdown List renders a dropdown list with a set width 1`] = `
<DropdownList
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  requestClose={[Function]}
  width="440px"
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
</DropdownList>
`;

exports[`Dropdown List renders a dropdown list with multiple children 1`] = `
<DropdownList
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  requestClose={[Function]}
>
  <Item
    label="1st Option"
    onSelect={[Function]}
  />
  <Item
    label="2nd Option"
    onSelect={[Function]}
  />
  <Item
    label="3rd Option"
    onSelect={[Function]}
  />
</DropdownList>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overlay should render a null component when isOpen is not provided 1`] = `""`;

exports[`Overlay when isOpen is provided -backgroundStyle- should render with the clear backgroundStyle 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen clear layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided -backgroundStyle- should render with the dark backgroundStyle 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen dark layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided -backgroundStyle- should render with the light backgroundStyle 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen light layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided -default Overlay when isOpen- should render a default component 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen light layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided should render with content 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen light layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        >
          Overlay message
        </div>
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided should render with isRelativeToContainer 1`] = `
<div
  className="overlay container light layer-100"
  onClick={[Function]}
  tabIndex="0"
>
  <div
    className="content"
  />
</div>
`;

exports[`Overlay when isOpen is provided should render with isScrollable 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen light scrollable layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

exports[`Overlay when isOpen is provided should render with onRequestClose 1`] = `
<Portal>
  <div
    className="background-scroll-content"
  >
    <div
      className="inner"
    />
  </div>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={Object {}}
    paused={false}
  >
    <div>
      <div
        className="overlay fullscreen light layer-100"
        onClick={[Function]}
        tabIndex="0"
      >
        <div
          className="content"
        />
      </div>
    </div>
  </FocusTrap>
</Portal>
`;

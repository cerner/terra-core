exports[`test should render a Select component with one option 1`] = `
<select
  className="terra-Form-select"
  defaultValue={null}
  name={null}
  required={false}>
  <option
    value="m">
    moo
  </option>
</select>
`;

exports[`test should render a Select when all the possible props are passed into it 1`] = `
<select
  aria-required="true"
  className="terra-Form-select"
  defaultValue={null}
  name="description"
  required={true}>
  <option
    value="m">
    moo
  </option>
</select>
`;

exports[`test should render a default Select component 1`] = `
<select
  className="terra-Form-select"
  defaultValue={null}
  name={null}
  required={false} />
`;

exports[`test should render as controlled when just the required fields and a onChange function is passed into the Select 1`] = `
<Select
  choices={
    Array [
      Object {
        "display": "moo",
        "value": "m",
      },
      Object {
        "display": "boo",
        "value": "b",
      },
    ]
  }
  defaultValue={null}
  name={null}
  onChange={[Function]}
  required={false}>
  <select
    className="terra-Form-select"
    defaultValue={null}
    name={null}
    onChange={[Function]}
    required={false}>
    <option
      value="m">
      moo
    </option>
    <option
      value="b">
      boo
    </option>
  </select>
</Select>
`;

exports[`test should render as uncontrolled when just the required fields and a default value is passed into the Select 1`] = `
<Select
  choices={
    Array [
      Object {
        "display": "moo",
        "value": "m",
      },
      Object {
        "display": "boo",
        "value": "b",
      },
    ]
  }
  defaultValue="boo"
  name={null}
  required={false}>
  <select
    className="terra-Form-select"
    defaultValue="boo"
    name={null}
    required={false}>
    <option
      value="m">
      moo
    </option>
    <option
      value="b">
      boo
    </option>
  </select>
</Select>
`;

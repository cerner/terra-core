// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a SelectField when all the possible props are passed into it 1`] = `
<Field
  error="jinkies!"
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help="solve the mystery"
  hideRequired={false}
  isInline={true}
  isInvalid={false}
  label="Meddling Kids"
  labelAttrs={
    Object {
      "className": "mystery-van",
    }
  }
  required={true}
  showOptional={false}
>
  <Select
    choices={null}
    className="scooby-snacks"
    name="zounds"
    options={
      Array [
        Object {
          "display": "moo",
          "value": "m",
        },
        Object {
          "display": "boo",
          "value": "b",
        },
      ]
    }
    required={true}
  />
</Field>
`;

exports[`should render a default SelectField component 1`] = `
<Field
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  isInline={false}
  isInvalid={false}
  label={null}
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <Select
    choices={null}
    name={null}
    options={
      Array [
        Object {
          "display": "moo",
          "value": "m",
        },
      ]
    }
    required={false}
  />
</Field>
`;

exports[`should render as controlled when just the required fields and a onChange function is passed into the SelectField 1`] = `
<SelectField
  choices={null}
  error={null}
  help={null}
  isInline={false}
  label={null}
  labelAttrs={Object {}}
  name={null}
  onChange={[Function]}
  options={
    Array [
      Object {
        "display": "moo",
        "value": "m",
      },
      Object {
        "display": "boo",
        "value": "b",
      },
    ]
  }
  required={false}
  selectAttrs={Object {}}
>
  <Field
    error={null}
    errorIcon={
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    }
    help={null}
    hideRequired={false}
    isInline={false}
    isInvalid={false}
    label={null}
    labelAttrs={Object {}}
    required={false}
    showOptional={false}
  >
    <div
      className="field"
    >
      <Select
        choices={null}
        name={null}
        onChange={[Function]}
        options={
          Array [
            Object {
              "display": "moo",
              "value": "m",
            },
            Object {
              "display": "boo",
              "value": "b",
            },
          ]
        }
        required={false}
      >
        <select
          className="select"
          name={null}
          onChange={[Function]}
          required={false}
        >
          <option
            value="m"
          >
            moo
          </option>
          <option
            value="b"
          >
            boo
          </option>
        </select>
      </Select>
    </div>
  </Field>
</SelectField>
`;

exports[`should render as uncontrolled when just the required fields and a default value is passed into the SelectField 1`] = `
<SelectField
  choices={null}
  defaultValue="b"
  error={null}
  help={null}
  isInline={false}
  label={null}
  labelAttrs={Object {}}
  name={null}
  options={
    Array [
      Object {
        "display": "moo",
        "value": "m",
      },
      Object {
        "display": "boo",
        "value": "b",
      },
    ]
  }
  required={false}
  selectAttrs={Object {}}
>
  <Field
    error={null}
    errorIcon={
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    }
    help={null}
    hideRequired={false}
    isInline={false}
    isInvalid={false}
    label={null}
    labelAttrs={Object {}}
    required={false}
    showOptional={false}
  >
    <div
      className="field"
    >
      <Select
        choices={null}
        defaultValue="b"
        name={null}
        options={
          Array [
            Object {
              "display": "moo",
              "value": "m",
            },
            Object {
              "display": "boo",
              "value": "b",
            },
          ]
        }
        required={false}
      >
        <select
          className="select"
          defaultValue="b"
          name={null}
          required={false}
        >
          <option
            value="m"
          >
            moo
          </option>
          <option
            value="b"
          >
            boo
          </option>
        </select>
      </Select>
    </div>
  </Field>
</SelectField>
`;

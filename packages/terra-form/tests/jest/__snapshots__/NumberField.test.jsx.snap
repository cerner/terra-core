// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a NumberField when all the possible props are passed into it 1`] = `
<Field
  error="This field is required"
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help="Your county's office may have this information"
  hideRequired={false}
  htmlFor="tax-rate"
  isInline={true}
  isInvalid={false}
  label="Sales Tax Rate"
  labelAttrs={
    Object {
      "className": "healtheintent-legend",
    }
  }
  required={true}
  showOptional={false}
>
  <Input
    className="cernerConsumer-application"
    id="tax-rate"
    max={1}
    min={0}
    name="sales_tax_rate"
    required={true}
    step={0.1}
    type="number"
  />
</Field>
`;

exports[`should render a default component 1`] = `
<Field
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  isInline={false}
  isInvalid={false}
  label={null}
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <Input
    max={null}
    min={null}
    name={null}
    required={false}
    step={null}
    type="number"
  />
</Field>
`;

exports[`should render as controlled when just a default value is passed into the NumberField 1`] = `
<NumberField
  error={null}
  help={null}
  inputAttrs={Object {}}
  isInline={false}
  label={null}
  labelAttrs={Object {}}
  max={null}
  min={null}
  name={null}
  onChange={[Function]}
  required={false}
  step={null}
  value={2}
>
  <Field
    error={null}
    errorIcon={
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    }
    help={null}
    hideRequired={false}
    isInline={false}
    isInvalid={false}
    label={null}
    labelAttrs={Object {}}
    required={false}
    showOptional={false}
  >
    <div
      className="field"
    >
      <Input
        max={null}
        min={null}
        name={null}
        onChange={[Function]}
        required={false}
        step={null}
        type="number"
        value={2}
      >
        <input
          className="input"
          max={null}
          min={null}
          name={null}
          onChange={[Function]}
          required={false}
          step={null}
          type="number"
          value={2}
        />
      </Input>
    </div>
  </Field>
</NumberField>
`;

exports[`should render as uncontrolled when just a numeric default value is passed into the NumberField 1`] = `
<Field
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  isInline={false}
  isInvalid={false}
  label={null}
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <Input
    defaultValue={2}
    max={null}
    min={null}
    name={null}
    required={false}
    step={null}
    type="number"
  />
</Field>
`;

exports[`should render as uncontrolled when just a string default value is passed into the NumberField 1`] = `
<Field
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  isInline={false}
  isInvalid={false}
  label={null}
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <Input
    defaultValue="2"
    max={null}
    min={null}
    name={null}
    required={false}
    step={null}
    type="number"
  />
</Field>
`;

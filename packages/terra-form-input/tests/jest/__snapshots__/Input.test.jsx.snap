// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input correctly applies the theme context className 1`] = `
<ThemeContextProvider
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <Input
    ariaLabel="label"
    disabled={false}
    isIncomplete={false}
    isInvalid={false}
    name={null}
    required={false}
  >
    <input
      aria-label="label"
      className="form-input orion-fusion-theme"
      disabled={false}
      name={null}
      required={false}
    />
  </Input>
</ThemeContextProvider>
`;

exports[`Input should favor ariaLabel prop over aria-label if both props passed to component 1`] = `
<input
  aria-label="ariaLabel"
  className="form-input"
  defaultValue="foo"
  disabled={false}
  name={null}
  required={false}
/>
`;

exports[`Input should honor aria-label passed to component 1`] = `
<input
  aria-label="label"
  className="form-input"
  defaultValue="foo"
  disabled={false}
  name={null}
  required={false}
/>
`;

exports[`Input should pass in refCallback as the ref prop of the input element 1`] = `
<Input
  disabled={false}
  isIncomplete={false}
  isInvalid={false}
  name={null}
  refCallback={
    [MockFunction] {
      "calls": Array [
        Array [
          <input
            class="form-input"
          />,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  required={false}
>
  <input
    className="form-input"
    disabled={false}
    name={null}
    required={false}
  />
</Input>
`;

exports[`Input should render a default component 1`] = `
<input
  aria-label="label"
  className="form-input"
  disabled={false}
  name={null}
  required={false}
/>
`;

exports[`Input should render as controlled when just a default value and \`onChange()\` is passed into the Input 1`] = `
<input
  className="form-input"
  disabled={false}
  name={null}
  onChange={[Function]}
  required={false}
  value="foo"
/>
`;

exports[`Input should render as uncontrolled when just a default value is passed into the Input 1`] = `
<input
  aria-label="label"
  className="form-input"
  defaultValue="foo"
  disabled={false}
  name={null}
  required={false}
/>
`;

exports[`Input should render with a type of password and pattern prop value 1`] = `
<input
  aria-label="label"
  className="form-input"
  disabled={false}
  name={null}
  pattern=".{6,}"
  required={false}
  type="password"
/>
`;

exports[`Input should set the forminput to disabled when passed into the component 1`] = `
<input
  className="form-input"
  disabled={true}
  name={null}
  required={false}
/>
`;

exports[`Input should set the forminput to incomplete when isIncomplete and required is passed into the component 1`] = `
<input
  aria-required="true"
  className="form-input form-incomplete"
  disabled={false}
  name={null}
  required={true}
/>
`;

exports[`Input should set the forminput to invalid when isInvalid is passed into the component 1`] = `
<input
  className="form-input form-error"
  disabled={false}
  name={null}
  required={false}
/>
`;

exports[`Input should set the forminput to required when required is passed into the component 1`] = `
<input
  aria-required="true"
  className="form-input"
  disabled={false}
  name={null}
  required={true}
/>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToggleButton should render a default toggle-button 1`] = `
<div
  class="button"
>
  <button
    aria-disabled="false"
    aria-expanded="false"
    class="button neutral"
    type="button"
  >
    <span
      class="button-label text-and-icon"
    >
      <span
        class="icon icon-first"
      >
        <span
          class="icon icon-svg"
        >
          <svg
            aria-hidden="true"
            class="tui-Icon icon is-bidi"
            data-name="Layer 1"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z"
            />
          </svg>
        </span>
      </span>
      <span
        class=""
      >
        Show
      </span>
    </span>
  </button>
  <div
    aria-hidden="true"
    class="toggle"
  />
</div>
`;

exports[`ToggleButton should render an animated toggle-button 1`] = `
<div
  class="button"
>
  <button
    aria-disabled="false"
    aria-expanded="false"
    class="button neutral"
    type="button"
  >
    <span
      class="button-label text-and-icon"
    >
      <span
        class="icon icon-first"
      >
        <span
          class="icon icon-svg"
        >
          <svg
            aria-hidden="true"
            class="tui-Icon icon is-bidi"
            data-name="Layer 1"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z"
            />
          </svg>
        </span>
      </span>
      <span
        class=""
      >
        Show
      </span>
    </span>
  </button>
  <div
    aria-hidden="true"
    class="toggle"
  >
    <div
      aria-hidden="false"
      class="rah-static"
      style="height:0;overflow:hidden"
    >
      <div>
        Test
      </div>
    </div>
  </div>
</div>
`;

exports[`ToggleButton should render an icon only toggle-button 1`] = `
<div
  class="button"
>
  <button
    aria-disabled="false"
    aria-expanded="false"
    aria-label="Show"
    class="button neutral"
    title="Show"
    type="button"
  >
    <span
      class="button-label icon-only"
    >
      <span
        class="icon"
      >
        <span
          class="icon icon-svg"
        >
          <svg
            aria-hidden="true"
            class="tui-Icon icon is-bidi"
            data-name="Layer 1"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z"
            />
          </svg>
        </span>
      </span>
    </span>
  </button>
  <div
    aria-hidden="true"
    class="toggle"
  />
</div>
`;

exports[`ToggleButton should render an initially open toggle-button 1`] = `
<div
  class="button is-open"
>
  <button
    aria-disabled="false"
    aria-expanded="true"
    class="button neutral"
    type="button"
  >
    <span
      class="button-label text-and-icon"
    >
      <span
        class="icon icon-first"
      >
        <span
          class="icon icon-svg"
        >
          <svg
            aria-hidden="true"
            class="tui-Icon icon is-bidi"
            data-name="Layer 1"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z"
            />
          </svg>
        </span>
      </span>
      <span
        class=""
      >
        Show
      </span>
    </span>
  </button>
  <div
    aria-hidden="false"
    class="toggle"
  >
    Test
  </div>
</div>
`;

exports[`ToggleButton should render an open toggle-button when clicked 1`] = `
<ToggleButton
  closedButtonText="Show"
  icon={
    <IconChevronRight
      className=""
      data-name="Layer 1"
      isBidi={true}
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  isAnimated={false}
  isIconAnimated={false}
  isIconOnly={false}
  isInitiallyOpen={false}
>
  <div
    className="button is-open"
  >
    <Button
      aria-expanded={true}
      icon={
        <span
          className="icon"
        >
          <IconChevronRight
            className=""
            data-name="Layer 1"
            isBidi={true}
            viewBox="0 0 48 48"
            xmlns="http://www.w3.org/2000/svg"
          />
        </span>
      }
      isBlock={false}
      isCompact={false}
      isDisabled={false}
      isIconOnly={false}
      isReversed={false}
      onClick={[Function]}
      text="Show"
      type="button"
      variant="neutral"
    >
      <button
        aria-disabled={false}
        aria-expanded={true}
        className="button neutral"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        type="button"
      >
        <span
          className="button-label text-and-icon"
        >
          <span
            className="icon icon-first"
          >
            <span
              className="icon icon-svg"
            >
              <IconChevronRight
                className=""
                data-name="Layer 1"
                isBidi={true}
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              >
                <IconBase
                  ariaLabel={null}
                  className=""
                  data-name="Layer 1"
                  focusable="false"
                  height="1em"
                  isBidi={true}
                  isSpin={false}
                  viewBox="0 0 48 48"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <svg
                    aria-hidden="true"
                    className="tui-Icon icon is-bidi"
                    data-name="Layer 1"
                    focusable="false"
                    height="1em"
                    viewBox="0 0 48 48"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z"
                    />
                  </svg>
                </IconBase>
              </IconChevronRight>
            </span>
          </span>
          <span
            className=""
          >
            Show
          </span>
        </span>
      </button>
    </Button>
    <Toggle
      isAnimated={false}
      isOpen={true}
    >
      <div
        aria-hidden={false}
        className="toggle"
      >
        Test
      </div>
    </Toggle>
  </div>
</ToggleButton>
`;

exports[`ToggleButton should set icon prop correctly 1`] = `
<div
  className="button"
>
  <Button
    aria-expanded={false}
    icon={
      <span
        className="icon"
      >
        <IconChevronRight
          className=""
          data-name="Layer 1"
          isBidi={true}
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        />
      </span>
    }
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Show"
    type="button"
    variant="neutral"
  />
  <Toggle
    isAnimated={false}
    isOpen={false}
  >
    Test
  </Toggle>
</div>
`;

exports[`ToggleButton should set icon prop correctly with custom icon 1`] = `
<div
  className="button"
>
  <Button
    aria-expanded={false}
    icon={
      <span
        className="icon"
      >
        <IconCaretRight
          className=""
          isBidi={true}
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        />
      </span>
    }
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Show"
    type="button"
    variant="neutral"
  />
  <Toggle
    isAnimated={false}
    isOpen={false}
  >
    Test
  </Toggle>
</div>
`;

exports[`ToggleButton should set onClose prop correctly 1`] = `
<div
  className="button"
>
  <Button
    aria-expanded={false}
    icon={
      <span
        className="icon"
      >
        <IconChevronRight
          className=""
          data-name="Layer 1"
          isBidi={true}
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        />
      </span>
    }
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Show"
    type="button"
    variant="neutral"
  />
  <Toggle
    isAnimated={false}
    isOpen={false}
  >
    Test
  </Toggle>
</div>
`;

exports[`ToggleButton should set onOpen prop correctly 1`] = `
<div
  className="button"
>
  <Button
    aria-expanded={false}
    icon={
      <span
        className="icon"
      >
        <IconChevronRight
          className=""
          data-name="Layer 1"
          isBidi={true}
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        />
      </span>
    }
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Show"
    type="button"
    variant="neutral"
  />
  <Toggle
    isAnimated={false}
    isOpen={false}
  >
    Test
  </Toggle>
</div>
`;

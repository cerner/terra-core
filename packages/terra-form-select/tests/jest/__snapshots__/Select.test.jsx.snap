// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select correctly applies the theme context className for default variant 1`] = `
<div
  aria-describedby="terra-select-screen-reader-description-24"
  aria-disabled="false"
  aria-expanded="false"
  aria-haspopup="true"
  aria-labelledby="terra-select-screen-reader-label-21 terra-select-screen-reader-display-22 terra-select-screen-reader-placeholder-23"
  aria-required="false"
  class="select default orion-fusion-theme"
  data-terra-select="true"
  data-terra-select-combobox="true"
  role="combobox"
  tabindex="0"
>
  <div
    class="visually-hidden-component"
    hidden=""
  >
    <span
      id="terra-select-screen-reader-label-21"
    >
      Terra.form.select.ariaLabel
    </span>
    <span
      id="terra-select-screen-reader-description-24"
    >
      Terra.form.select.listOfTotalOptions Terra.form.select.defaultUsageGuidance
    </span>
  </div>
  <div
    aria-label="Terra.form.select.ariaLabel"
    class="display"
    role="textbox"
  >
    <div
      class="placeholder"
      id="terra-select-screen-reader-placeholder-23"
    >
      Terra.form.select.defaultDisplay
    </div>
  </div>
  <div
    class="toggle"
    data-terra-form-select-toggle="true"
  >
    <span
      class="arrow-icon"
    />
  </div>
  <span
    aria-atomic="true"
    aria-live="assertive"
    aria-relevant="additions text"
    class="visually-hidden-component"
  />
</div>
`;

exports[`Select should render a clear option 1`] = `
<SingleSelect
  allowClear={true}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  required={false}
/>
`;

exports[`Select should render a combobox variant 1`] = `
<InjectIntl(Combobox)
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a combobox variant with a placeholder 1`] = `
<InjectIntl(Combobox)
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  placeholder="Placeholder"
  required={false}
/>
`;

exports[`Select should render a default variant 1`] = `
<SingleSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  required={false}
/>
`;

exports[`Select should render a default variant with a placeholder 1`] = `
<SingleSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  placeholder="Placeholder"
  required={false}
/>
`;

exports[`Select should render a disabled combobox variant 1`] = `
<TagSelect
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a disabled default variant 1`] = `
<SingleSelect
  allowClear={false}
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  required={false}
/>
`;

exports[`Select should render a disabled multiple variant 1`] = `
<MultiSelect
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a disabled search variant 1`] = `
<SearchSelect
  allowClear={false}
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a disabled tag variant 1`] = `
<TagSelect
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a multiple variant 1`] = `
<MultiSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a multiple variant with a placeholder 1`] = `
<MultiSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  placeholder="Placeholder"
  required={false}
/>
`;

exports[`Select should render a required select 1`] = `
<SingleSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  required={true}
/>
`;

exports[`Select should render a search variant 1`] = `
<SearchSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a search variant with a placeholder 1`] = `
<SearchSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  placeholder="Placeholder"
  required={false}
/>
`;

exports[`Select should render a select with an optgroup and an option 1`] = `
<div
  aria-describedby="terra-select-screen-reader-description-14"
  aria-disabled="false"
  aria-expanded="false"
  aria-haspopup="true"
  aria-labelledby="terra-select-screen-reader-label-11 terra-select-screen-reader-display-12 terra-select-screen-reader-placeholder-13"
  aria-required="false"
  class="select default"
  data-terra-select="true"
  data-terra-select-combobox="true"
  role="combobox"
  tabindex="0"
>
  <div
    class="visually-hidden-component"
    hidden=""
  >
    <span
      id="terra-select-screen-reader-label-11"
    >
      Terra.form.select.ariaLabel
    </span>
    <span
      id="terra-select-screen-reader-description-14"
    >
      Terra.form.select.listOfTotalOptions Terra.form.select.defaultUsageGuidance
    </span>
  </div>
  <div
    aria-label="Terra.form.select.ariaLabel"
    class="display"
    role="textbox"
  >
    <div
      class="placeholder"
      id="terra-select-screen-reader-placeholder-13"
    >
      Terra.form.select.defaultDisplay
    </div>
  </div>
  <div
    class="toggle"
    data-terra-form-select-toggle="true"
  >
    <span
      class="arrow-icon"
    />
  </div>
  <span
    aria-atomic="true"
    aria-live="assertive"
    aria-relevant="additions text"
    class="visually-hidden-component"
  />
</div>
`;

exports[`Select should render a select with an optgroup and multiple options 1`] = `
<div
  aria-describedby="terra-select-screen-reader-description-19"
  aria-disabled="false"
  aria-expanded="false"
  aria-haspopup="true"
  aria-labelledby="terra-select-screen-reader-label-16 terra-select-screen-reader-display-17 terra-select-screen-reader-placeholder-18"
  aria-required="false"
  class="select default"
  data-terra-select="true"
  data-terra-select-combobox="true"
  role="combobox"
  tabindex="0"
>
  <div
    class="visually-hidden-component"
    hidden=""
  >
    <span
      id="terra-select-screen-reader-label-16"
    >
      Terra.form.select.ariaLabel
    </span>
    <span
      id="terra-select-screen-reader-description-19"
    >
      Terra.form.select.listOfTotalOptions Terra.form.select.defaultUsageGuidance
    </span>
  </div>
  <div
    aria-label="Terra.form.select.ariaLabel"
    class="display"
    role="textbox"
  >
    <div
      class="placeholder"
      id="terra-select-screen-reader-placeholder-18"
    >
      Terra.form.select.defaultDisplay
    </div>
  </div>
  <div
    class="toggle"
    data-terra-form-select-toggle="true"
  >
    <span
      class="arrow-icon"
    />
  </div>
  <span
    aria-atomic="true"
    aria-live="assertive"
    aria-relevant="additions text"
    class="visually-hidden-component"
  />
</div>
`;

exports[`Select should render a select with an option 1`] = `
<div
  aria-describedby="terra-select-screen-reader-description-4"
  aria-disabled="false"
  aria-expanded="false"
  aria-haspopup="true"
  aria-labelledby="terra-select-screen-reader-label-1 terra-select-screen-reader-display-2 terra-select-screen-reader-placeholder-3"
  aria-required="false"
  class="select default"
  data-terra-select="true"
  data-terra-select-combobox="true"
  role="combobox"
  tabindex="0"
>
  <div
    class="visually-hidden-component"
    hidden=""
  >
    <span
      id="terra-select-screen-reader-label-1"
    >
      Terra.form.select.ariaLabel
    </span>
    <span
      id="terra-select-screen-reader-description-4"
    >
      Terra.form.select.listOfTotalOptions Terra.form.select.defaultUsageGuidance
    </span>
  </div>
  <div
    aria-label="Terra.form.select.ariaLabel"
    class="display"
    role="textbox"
  >
    <div
      class="placeholder"
      id="terra-select-screen-reader-placeholder-3"
    >
      Terra.form.select.defaultDisplay
    </div>
  </div>
  <div
    class="toggle"
    data-terra-form-select-toggle="true"
  >
    <span
      class="arrow-icon"
    />
  </div>
  <span
    aria-atomic="true"
    aria-live="assertive"
    aria-relevant="additions text"
    class="visually-hidden-component"
  />
</div>
`;

exports[`Select should render a select with multiple options 1`] = `
<div
  aria-describedby="terra-select-screen-reader-description-9"
  aria-disabled="false"
  aria-expanded="false"
  aria-haspopup="true"
  aria-labelledby="terra-select-screen-reader-label-6 terra-select-screen-reader-display-7 terra-select-screen-reader-placeholder-8"
  aria-required="false"
  class="select default"
  data-terra-select="true"
  data-terra-select-combobox="true"
  role="combobox"
  tabindex="0"
>
  <div
    class="visually-hidden-component"
    hidden=""
  >
    <span
      id="terra-select-screen-reader-label-6"
    >
      Terra.form.select.ariaLabel
    </span>
    <span
      id="terra-select-screen-reader-description-9"
    >
      Terra.form.select.listOfTotalOptions Terra.form.select.defaultUsageGuidance
    </span>
  </div>
  <div
    aria-label="Terra.form.select.ariaLabel"
    class="display"
    role="textbox"
  >
    <div
      class="placeholder"
      id="terra-select-screen-reader-placeholder-8"
    >
      Terra.form.select.defaultDisplay
    </div>
  </div>
  <div
    class="toggle"
    data-terra-form-select-toggle="true"
  >
    <span
      class="arrow-icon"
    />
  </div>
  <span
    aria-atomic="true"
    aria-live="assertive"
    aria-relevant="additions text"
    class="visually-hidden-component"
  />
</div>
`;

exports[`Select should render a tag variant 1`] = `
<TagSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render a tag variant with a placeholder 1`] = `
<TagSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isTouchAccessible={false}
  placeholder="Placeholder"
  required={false}
/>
`;

exports[`Select should render an incomplete combobox variant 1`] = `
<InjectIntl(Combobox)
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={true}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an incomplete default variant 1`] = `
<SingleSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={true}
  isInvalid={false}
  required={false}
/>
`;

exports[`Select should render an incomplete multiple variant 1`] = `
<MultiSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={true}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an incomplete search variant 1`] = `
<SearchSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={true}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an incomplete tag variant 1`] = `
<TagSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={true}
  isInvalid={false}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an invalid combobox variant 1`] = `
<InjectIntl(Combobox)
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={true}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an invalid default variant 1`] = `
<SingleSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={true}
  required={false}
/>
`;

exports[`Select should render an invalid multiple variant 1`] = `
<MultiSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={true}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an invalid search variant 1`] = `
<SearchSelect
  allowClear={false}
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={true}
  isTouchAccessible={false}
  required={false}
/>
`;

exports[`Select should render an invalid tag variant 1`] = `
<TagSelect
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={true}
  isTouchAccessible={false}
  required={false}
/>
`;

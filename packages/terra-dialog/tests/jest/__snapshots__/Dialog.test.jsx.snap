// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog correctly applies the theme context className 1`] = `
<ThemeContextProvider
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <injectIntl(Dialog)
    footer="Footer Content"
    header="Header Content"
  >
    <Dialog
      footer="Footer Content"
      header="Header Content"
      intl={
        Object {
          "$t": [Function],
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "defaultRichTextElements": undefined,
          "fallbackOnEmptyString": true,
          "formatDate": [Function],
          "formatDateTimeRange": [Function],
          "formatDateToParts": [Function],
          "formatDisplayName": [Function],
          "formatList": [Function],
          "formatListToParts": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getDisplayNames": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "onError": [Function],
          "onWarn": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
          "wrapRichTextChunksInFragment": undefined,
        }
      }
      onClose={null}
    >
      <div
        className="dialog orion-fusion-theme"
      >
        <ContentContainer
          fill={true}
          footer={
            <div
              className="dialog-footer"
            >
              Footer Content
            </div>
          }
          header={
            <div
              className="dialog-header"
            >
              <div
                className="dialog-header-title"
              >
                Header Content
              </div>
            </div>
          }
        >
          <div
            className="content-container-fill"
          >
            <div
              className="header"
            >
              <div
                className="dialog-header"
              >
                <div
                  className="dialog-header-title"
                >
                  Header Content
                </div>
              </div>
            </div>
            <div
              className="main"
            >
              <Scroll
                className="normalizer"
              >
                <div
                  className="scroll normalizer"
                >
                  <div
                    className="dialog-body"
                  >
                    some body content
                  </div>
                </div>
              </Scroll>
            </div>
            <div
              className="footer"
            >
              <div
                className="dialog-footer"
              >
                Footer Content
              </div>
            </div>
          </div>
        </ContentContainer>
      </div>
    </Dialog>
  </injectIntl(Dialog)>
</ThemeContextProvider>
`;

exports[`Dialog should render a Dialog with merged attributes 1`] = `
<Dialog
  className="TestClass"
  footer="Footer Content"
  header="Header Content"
  intl={
    Object {
      "$t": [Function],
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "defaultRichTextElements": undefined,
      "fallbackOnEmptyString": true,
      "formatDate": [Function],
      "formatDateTimeRange": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatList": [Function],
      "formatListToParts": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "onError": [Function],
      "onWarn": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": undefined,
      "wrapRichTextChunksInFragment": undefined,
    }
  }
  onClose={null}
>
  some body content
</Dialog>
`;

exports[`Dialog should render a default component 1`] = `
<div
  className="dialog"
>
  <ContentContainer
    fill={true}
    footer={
      <div
        className="dialog-footer"
      >
        Footer Content
      </div>
    }
    header={
      <div
        className="dialog-header"
      >
        <div
          className="dialog-header-title"
        >
          Header Content
        </div>
      </div>
    }
  >
    <div
      className="dialog-body"
    >
      some body content
    </div>
  </ContentContainer>
</div>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a field error message 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a field help message 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render a field in error 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
  </div>
  <div
    className="error-text"
    id="test-error"
    tabIndex="-1"
  >
    Error Text
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render a field label 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a field with a custom error icon 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconHelp
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a field with a hidden label 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a field with a hidden label in error 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
    </label>
  </div>
  <div
    className="error-text"
    id="test-error"
    tabIndex="-1"
  >
    Error Text
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render a required field in error 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
  </div>
  <div
    className="error-text"
    id="test-error"
    tabIndex="-1"
  >
    Error Text
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render a required field label 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a required field label with required hidden 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
      <div
        className="required-hidden"
      >
        *
      </div>
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a required field with a hidden label 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`should render a required field with a hidden label in error 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
  </div>
  <div
    className="error-text"
    id="test-error"
    tabIndex="-1"
  >
    Error Text
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render an inline field with most of the possible props are passed into it 1`] = `
<div
  className="field field-inline"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label healtheintent-legend"
      htmlFor="test"
    >
      Text
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <input
    id="test"
    type="text"
  />
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    This is a test input
  </div>
</div>
`;

exports[`should render an optional field in error 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
      <div
        className="optional"
      >
        Terra.form.field.optional
      </div>
    </label>
  </div>
  <div
    className="error-text"
    id="test-error"
    tabIndex="-1"
  >
    Error Text
  </div>
  <div
    className="help-text"
    id="test-help"
    tabIndex="-1"
  >
    Help Text
  </div>
</div>
`;

exports[`should render an optional field label 1`] = `
<div
  className="field"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label"
      htmlFor="test"
    >
      Field Label
      <div
        className="optional"
      >
        Terra.form.field.optional
      </div>
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

// Icon Component
// ====================================================
:local {
  .icon {
    display: inline-block;
    vertical-align: -0.15em; // Adjusts visual alignment for icons to better align next to text
  }

  /**
   * The following selectors match all SVG elements, (path, cirlec, line, rect, etc), within inline SVG
   * which do not have a predefined fill color.
   */
  .icon *:not([fill]) {
    fill: currentColor; // Allows icon color to be inherited from text color
  }

  // We need dir='rtl'
  // https://github.com/vkalinichev/postcss-rtl/issues/15
  [dir='rtl'] .icon.is-bidi {
    transform: scaleX(-1);
  }
}







.IconComplete {
  path:first-child {
    fill: var(--terra-, #78c346);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconNoRisk {
  path:first-child {
    fill: var(--terra-, #868A8C);
  }
}

.IconScheduled {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #78c346);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #fff);
  }
}

.IconRollup {
  path:first-child {
    fill: var(--terra-, currentColor);
  }
}

.IconHighPriority {
  path:first-child {
    fill: var(--terra-, currentColor);
  }
}

.IconAlert {
  path:first-child {
    fill: var(--terra-, #E50000);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconWarning {
  path:first-child {
    fill: var(--terra-, #FFC20A);
  }

  path:last-child {
    fill: var(--terra-, #1C1F21);
  }
}

.IconModerate {
  path {
    fill: var(--terra-, #868A8C);
  }
}

.IconUnspecified {
  path {
    fill: var(--terra-, #868A8C);
  }
}

.IconCritical {
  path:first-child {
    fill: var(--terra-, #C00);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconCriticalInverse {
  path {
    fill: var(--terra-, #fff);
  }
}

.IconInformation {
  path:first-child {
    fill: var(--terra-, #007CC3);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconInformationInverse {
  path:first-child {
    fill: var(--terra-, #fff);
  }
}

.IconErrorDark {
  path:first-child {
    fill: var(--terra-, currentColor);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconError {
  path:first-child {
    fill: var(--terra-, #E50000);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconDoNotDisturb {
  path:first-child {
    fill: var(--terra-, #E50000);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconIncompleteInverse {
  path:first-child {
    fill: var(--terra-, #fff);
  }
}

.IconHelp {
  path:first-child {
    fill: var(--terra-, #007CC3);
  }

  path:last-child {
    fill: var(--terra-, #fff);
  }
}

.IconHelpInverse {
  path:first-child {
    fill: var(--terra-, #fff);
  }
}

.IconUnexpected {
  path:first-child {
    fill: var(--terra-, #868A8C);
  }
}

.IconDueSoon {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #FFC20A);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #1C1F21);
  }

  path:nth-of-type(4) {
    fill: var(--terra-, #1C1F21);
  }
}

.IconOverDue {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #E50000);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #fff);
  }
}

.IconHigh {
  path {
    fill: var(--terra-, #FF6100);
  }
}

.IconHighInverse {
  path {
    fill: var(--terra-, #FFF);
  }
}

.IconLow {
  path:first-child {
    fill: var(--terra-, #0053E6);
  }
}

.IconLowRisk {
  path:first-child {
    fill: var(--terra-, #868A8C);
  }
}

.IconMax {
  path {
    fill: var(--terra-, currentColor);
  }
}

.IconMin {
  path {
    fill: var(--terra-, currentColor);
  }
}

.IconAbnormal {
  path{
    fill: var(--terra-, #654A08);
  }
}

.IconDeviceCheck {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #78C346);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #fff);
  }
}

.IconDeviceAlert {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #E50000);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #fff);
  }
}

.IconDiamond {
  path {
    fill: var(--terra-, #78288C);
  }
}

.IconPharmacyReject {
  path:nth-of-type(1) {
    fill: var(--terra-, #E50000);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, currentColor);
  }
}

.IconHide {
  path {
    fill: var(--terra-, currentColor);
  }
}

.IconBedAssigned {
  circle:first-child {
    fill: var(--terra-, #78C346);
  }

  path {
    fill: var(--terra-, #FFF);
  }

  path:last-child {
    fill: var(--terra-, currentColor);
  }
}

.IconDischargeComplete {
  path:nth-of-type(1) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #78C346);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, #fff);
  }
}

.IconDischargeComingDue {
  path:nth-of-type(1) {
    fill: var(--terra-, #FFC20B);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, currentColor);
  }
}

.IconDischargeOverDue {
  path:nth-of-type(1) {
    fill: var(--terra-, #E50000);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, #fff);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, currentColor);
  }
}

.IconDrugDrug {
  path:nth-of-type(1) {
    fill: var(--terra-, #FFC20B);
  }

  path:nth-of-type(2) {
    fill: var(--terra-, currentColor);
  }

  path:nth-of-type(3) {
    fill: var(--terra-, currentColor);
  }
}
